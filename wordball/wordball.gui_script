local words = require "wordball.words"

function init(self)
	self.letters = {}
	self.letters_node = gui.get_node("letters")
	self.confirm_node = gui.get_node("confirm")
	self.cancel_node = gui.get_node("cancel")
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	--print(message_id)
	if message_id == hash("add_letter") then
		table.insert(self.letters, message.letter)
		local word = table.concat(self.letters)
		local value = words.value(word)
		gui.set_text(self.letters_node, ("%s (%d pts)"):format(word, value))
	elseif message_id == hash("update_score") then
		local node = gui.get_node("scorebar")
		local ratio = math.min(1, message.score / message.max)
		local size = gui.get_size(node)
		size.x = 30 + 820 * ratio
		gui.set_size(node, size)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		if gui.pick_node(self.cancel_node, action.x, action.y) and #self.letters > 0 then
			local word = table.concat(self.letters)
			msg.post("game#wordball", "add_letters", { letters = word })
			msg.post("game#wordball", "cancel_word")
			self.letters = {}
			gui.set_text(self.letters_node, "")
		elseif gui.pick_node(self.confirm_node, action.x, action.y) then
			local word = table.concat(self.letters)
			if words.is_word(word) then
				print("correct")
				msg.post("game#wordball", "correct_word", { value = words.value(word)})
			else
				print("incorrect")
				msg.post("game#wordball", "add_letters", { letters = word })
				msg.post("game#wordball", "wrong_word")
			end
			self.letters = {}
			gui.set_text(self.letters_node, "")
		end
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
